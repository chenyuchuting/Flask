1. 蓝图（蓝本）
    1.1 如果项目庞大繁杂，我们就需要了解项目的组织技巧，蓝图的目的就是让Flask项目更加模块化，结构更加清晰，蓝图可以将相同的模块视图函数放在同一个蓝图下，同一个文件中，更加方便开发者管理。
    1.2 蓝图的基本语法：首先在项目根目录下建立包文件blueprints；其次建立单个蓝图py文件；在蓝图文件中from flask import Blueprint，建立user_bp = Blueprint('admin', __name__, url_prefix="/info")；最后要在app.py文件中注册蓝图。
    1.3 如果想要在某个蓝图下的url前都要一个相同的前缀，那么在定义蓝图的时候，指定关键字参数url_prefix="/info"，如果/info后面不增加/，那么在定义视图函数的时候，就不需要再增加/了。
    1.4 蓝图中模板文件寻找规则：如果项目中的templates文件夹中有相应的模板文件可直接使用；如果templates文件夹没有相应的模板文件，那么就会到定义蓝图的指定的template_folder路径中寻找，并且在蓝图中指定的路径可以为相对路径，相对指的是当前这个蓝图文件所在的目录。
    1.5 蓝图中静态文件寻找规则：在模板文件中，加载静态的文件，如果使用url_for()，那么就只会在app指定的静态文件加目录下查找静态文件；如果指定蓝图的名字，比如"admin.static"，那么Flask就会到这个蓝图指定的static_folder下查找静态文件。
    1.6 url_for()反转蓝图中的视图函数为url：项目使用了蓝图，在模板或视图函数中使用url_for()函数的时候，必须要加上蓝图的名字.视图函数名字，否则就找不到这个endpoint。